
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY COMMA DATE DIVIDE ELIF ELSE EQUAL EQUALS FALSE FOR FUNCTION GETFULLYEAR HAS ID IF INTERSECTION LBRACE LBRACKET LESSTHAN LESSTHANEQUALS LET LPAREN MINUS MOD MORETHAN MORETHANEQUALS NEW NEWLINE NOT NOTEQUALS NULL NUMBER OF OR PLUS POINT POP PRINT PUSH RBRACE RBRACKET RPAREN SEMICOLON SETDATE SHIFT STARTSWITH STRICTEQUALS STRICTNOTEQUALS STRING TIMES TOLOWERCASE TOSTRING TOUPPERCASE TRUE UNION VAR WHILEsentencias : statement\n    | if\n    | for\n    | whilestatement : stmstm : asignacionstm : expresionstm : metodosmetodos : imprimir\n    | touppercase\n    | tolowercase\n    | startwith\n    | tostring\n    | pop\n    | push\n    | shift\n    | setdate\n    | getfullyearimprimir : PRINT LPAREN factor RPARENtouppercase : ID TOUPPERCASE LPAREN RPAREN\n    | asignacion TOUPPERCASE LPAREN RPAREN tolowercase : ID TOLOWERCASE LPAREN RPAREN\n    | asignacion TOLOWERCASE LPAREN RPARENstartwith : ID STARTSWITH LPAREN STRING RPAREN\n    | asignacion STARTSWITH LPAREN RPAREN tostring : ID TOSTRING LPAREN RPAREN\n        | asignacion TOSTRING LPAREN RPAREN pop : ID POP LPAREN RPAREN\n    | asignacion POP LPAREN RPARENpush : ID PUSH LPAREN factor RPAREN\n    | asignacion PUSH LPAREN factor RPARENshift : ID SHIFT LPAREN RPAREN\n    | asignacion SHIFT LPAREN RPARENsetdate : ID SETDATE LPAREN NUMBER RPAREN\n    | asignacion SETDATE LPAREN NUMBER RPARENgetfullyear : ID GETFULLYEAR LPAREN RPAREN\n    | asignacion GETFULLYEAR LPAREN RPARENwhile : WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACEif : IF LPAREN condicion RPAREN LBRACE sentencias RBRACE\n    | IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else\n    | IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseifcondicion : TRUE\n    | FALSE\n    | NOT expresion\n    | expresion EQUALS expresion\n    | expresion NOTEQUALS expresion\n    | expresion STRICTEQUALS expresion\n    | expresion MORETHAN expresion\n    | expresion LESSTHAN expresion\n    | expresion MORETHANEQUALS expresion\n    | expresion LESSTHANEQUALS expresion\n    | expresion STRICTNOTEQUALS expresion\n    | expresion OR expresion\n    | expresion AND expresion\n    | LPAREN condicion RPAREN EQUALS expresion\n    | LPAREN condicion RPAREN NOTEQUALS expresion\n    | LPAREN condicion RPAREN STRICTEQUALS expresion\n    | LPAREN condicion RPAREN MORETHAN expresion\n    | LPAREN condicion RPAREN LESSTHAN expresion\n    | LPAREN condicion RPAREN MORETHANEQUALS expresion\n    | LPAREN condicion RPAREN LESSTHANEQUALS expresion\n    | LPAREN condicion RPAREN STRICTNOTEQUALS expresionelse : ELSE LBRACE sentencias RBRACEelseif : ELIF LPAREN condicion RPAREN LBRACE sentencias RBRACE elsefor : FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACEasignacion : type ID EQUAL expresion\n    | asignacion_dateasignacion_date : type ID EQUAL NEW DATE LPAREN RPAREN\n    | type ID EQUAL NEW DATE LPAREN date_param RPARENdate_param : STRING \n    | NUMBER\n    | NUMBER COMMA NUMBER\n    | NUMBER COMMA NUMBER COMMA NUMBER\n    type : VAR\n    | LETexpresion : expresion operador term\n    | expresion operador expresion_entre_paren\n    | expresion_entre_parenexpresion_entre_paren : LPAREN expresion operador term RPARENoperador : MINUS\n    | PLUS\n    | DIVIDE\n    | TIMES\n    | MODexpresion : termterm : factorfactor : IDfactor : NUMBERfactor : STRINGfactor : TRUE\n    | FALSE '
    
_lr_action_items = {'IF':([0,138,155,189,192,203,],[7,7,7,7,7,7,]),'FOR':([0,138,155,189,192,203,],[9,9,9,9,9,9,]),'WHILE':([0,138,155,189,192,203,],[12,12,12,12,12,12,]),'VAR':([0,40,138,155,189,192,203,],[29,29,29,29,29,29,29,]),'LET':([0,40,138,155,189,192,203,],[30,30,30,30,30,30,30,]),'LPAREN':([0,7,8,9,12,32,37,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,68,72,74,76,103,104,105,106,107,108,109,110,111,112,138,151,155,158,159,160,161,162,163,164,165,188,189,192,193,203,],[8,37,8,40,51,67,68,77,78,79,80,81,82,83,84,85,68,87,88,89,90,91,92,93,94,95,8,-80,-81,-82,-83,-84,68,8,8,8,8,8,8,8,8,8,8,8,8,8,8,168,8,8,8,8,8,8,8,8,8,193,8,8,68,8,]),'PRINT':([0,138,155,189,192,203,],[32,32,32,32,32,32,]),'ID':([0,8,10,29,30,37,51,61,62,63,64,65,66,67,68,72,74,75,76,82,92,103,104,105,106,107,108,109,110,111,112,138,150,155,158,159,160,161,162,163,164,165,189,192,193,203,],[11,39,41,-74,-75,39,39,39,-80,-81,-82,-83,-84,39,39,39,39,114,39,39,39,39,39,39,39,39,39,39,39,39,39,11,167,11,39,39,39,39,39,39,39,39,11,11,39,11,]),'NUMBER':([0,8,37,51,61,62,63,64,65,66,67,68,72,74,76,82,84,92,94,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,168,189,191,192,193,199,203,],[34,34,34,34,34,-80,-81,-82,-83,-84,34,34,34,34,34,34,124,34,134,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,183,34,195,34,34,202,34,]),'STRING':([0,8,37,51,61,62,63,64,65,66,67,68,72,74,76,79,82,92,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,168,189,192,193,203,],[33,33,33,33,33,-80,-81,-82,-83,-84,33,33,33,33,33,119,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,182,33,33,33,33,]),'TRUE':([0,8,37,51,61,62,63,64,65,66,67,68,72,74,76,82,92,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[35,35,70,70,35,-80,-81,-82,-83,-84,35,70,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,70,35,]),'FALSE':([0,8,37,51,61,62,63,64,65,66,67,68,72,74,76,82,92,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[36,36,71,71,36,-80,-81,-82,-83,-84,36,71,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,71,36,]),'$end':([1,2,3,4,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,34,35,36,39,96,97,115,117,118,120,121,123,125,127,128,129,130,131,133,135,136,149,152,153,154,156,157,178,180,184,185,186,190,198,200,206,],[0,-1,-2,-3,-4,-5,-87,-6,-7,-8,-67,-85,-78,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-86,-89,-88,-90,-91,-87,-76,-77,-66,-20,-22,-26,-28,-32,-36,-21,-23,-25,-27,-29,-33,-37,-19,-79,-24,-30,-34,-31,-35,-39,-68,-38,-40,-41,-69,-65,-63,-64,]),'RBRACE':([2,3,4,5,6,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,33,34,35,36,39,96,97,115,117,118,120,121,123,125,127,128,129,130,131,133,135,136,149,152,153,154,156,157,166,169,178,180,184,185,186,190,194,196,198,200,204,206,],[-1,-2,-3,-4,-5,-87,-6,-7,-8,-67,-85,-78,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-86,-89,-88,-90,-91,-87,-76,-77,-66,-20,-22,-26,-28,-32,-36,-21,-23,-25,-27,-29,-33,-37,-19,-79,-24,-30,-34,-31,-35,178,184,-39,-68,-38,-40,-41,-69,198,200,-65,-63,205,-64,]),'TOUPPERCASE':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[42,52,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'TOLOWERCASE':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[43,53,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'STARTSWITH':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[44,54,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'TOSTRING':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[45,55,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'POP':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[46,56,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'PUSH':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[47,57,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'SHIFT':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[48,58,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'SETDATE':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[49,59,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'GETFULLYEAR':([11,13,16,17,18,31,33,34,35,36,39,96,97,115,149,180,190,],[50,60,-67,-85,-78,-86,-89,-88,-90,-91,-87,-76,-77,-66,-79,-68,-69,]),'MINUS':([11,14,17,18,31,33,34,35,36,38,39,70,71,73,96,97,100,102,113,115,139,140,141,142,143,144,145,146,147,148,149,170,171,172,173,174,175,176,177,],[-87,62,-85,-78,-86,-89,-88,-90,-91,62,-87,-90,-91,62,-76,-77,62,62,-76,62,62,62,62,62,62,62,62,62,62,62,-79,62,62,62,62,62,62,62,62,]),'PLUS':([11,14,17,18,31,33,34,35,36,38,39,70,71,73,96,97,100,102,113,115,139,140,141,142,143,144,145,146,147,148,149,170,171,172,173,174,175,176,177,],[-87,63,-85,-78,-86,-89,-88,-90,-91,63,-87,-90,-91,63,-76,-77,63,63,-76,63,63,63,63,63,63,63,63,63,63,63,-79,63,63,63,63,63,63,63,63,]),'DIVIDE':([11,14,17,18,31,33,34,35,36,38,39,70,71,73,96,97,100,102,113,115,139,140,141,142,143,144,145,146,147,148,149,170,171,172,173,174,175,176,177,],[-87,64,-85,-78,-86,-89,-88,-90,-91,64,-87,-90,-91,64,-76,-77,64,64,-76,64,64,64,64,64,64,64,64,64,64,64,-79,64,64,64,64,64,64,64,64,]),'TIMES':([11,14,17,18,31,33,34,35,36,38,39,70,71,73,96,97,100,102,113,115,139,140,141,142,143,144,145,146,147,148,149,170,171,172,173,174,175,176,177,],[-87,65,-85,-78,-86,-89,-88,-90,-91,65,-87,-90,-91,65,-76,-77,65,65,-76,65,65,65,65,65,65,65,65,65,65,65,-79,65,65,65,65,65,65,65,65,]),'MOD':([11,14,17,18,31,33,34,35,36,38,39,70,71,73,96,97,100,102,113,115,139,140,141,142,143,144,145,146,147,148,149,170,171,172,173,174,175,176,177,],[-87,66,-85,-78,-86,-89,-88,-90,-91,66,-87,-90,-91,66,-76,-77,66,66,-76,66,66,66,66,66,66,66,66,66,66,66,-79,66,66,66,66,66,66,66,66,]),'EQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,103,-76,-77,103,-76,158,-79,]),'NOTEQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,104,-76,-77,104,-76,159,-79,]),'STRICTEQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,105,-76,-77,105,-76,160,-79,]),'MORETHAN':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,106,-76,-77,106,-76,161,-79,]),'LESSTHAN':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,107,-76,-77,107,-76,162,-79,]),'MORETHANEQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,108,-76,-77,108,-76,163,-79,]),'LESSTHANEQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,109,-76,-77,109,-76,164,-79,]),'STRICTNOTEQUALS':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,137,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,110,-76,-77,110,-76,165,-79,]),'OR':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,111,-76,-77,111,-76,-79,]),'AND':([17,18,31,33,34,35,36,39,70,71,73,96,97,100,113,149,],[-85,-78,-86,-89,-88,-90,-91,-87,-90,-91,112,-76,-77,112,-76,-79,]),'RPAREN':([17,18,31,33,34,35,36,39,69,70,71,77,78,80,81,83,85,86,87,88,89,90,91,93,95,96,97,98,99,102,113,119,122,124,132,134,139,140,141,142,143,144,145,146,147,148,149,167,168,170,171,172,173,174,175,176,177,181,182,183,195,197,202,],[-85,-78,-86,-89,-88,-90,-91,-87,101,-42,-43,117,118,120,121,123,125,126,127,128,129,130,131,133,135,-76,-77,136,137,-44,149,152,153,154,156,157,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-79,179,180,-55,-56,-57,-58,-59,-60,-61,-62,190,-70,-71,-72,201,-73,]),'NOT':([37,51,68,193,],[72,72,72,72,]),'EQUAL':([41,],[76,]),'NEW':([76,],[116,]),'LBRACE':([101,126,179,187,201,],[138,155,189,192,203,]),'OF':([114,],[150,]),'DATE':([116,],[151,]),'ELSE':([178,205,],[187,187,]),'ELIF':([178,],[188,]),'COMMA':([183,195,],[191,199,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencias':([0,138,155,189,192,203,],[1,166,169,194,196,204,]),'statement':([0,138,155,189,192,203,],[2,2,2,2,2,2,]),'if':([0,138,155,189,192,203,],[3,3,3,3,3,3,]),'for':([0,138,155,189,192,203,],[4,4,4,4,4,4,]),'while':([0,138,155,189,192,203,],[5,5,5,5,5,5,]),'stm':([0,138,155,189,192,203,],[6,6,6,6,6,6,]),'type':([0,40,138,155,189,192,203,],[10,75,10,10,10,10,10,]),'asignacion':([0,138,155,189,192,203,],[13,13,13,13,13,13,]),'expresion':([0,8,37,51,68,72,76,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[14,38,73,73,100,102,115,139,140,141,142,143,144,145,146,147,148,14,14,170,171,172,173,174,175,176,177,14,14,73,14,]),'metodos':([0,138,155,189,192,203,],[15,15,15,15,15,15,]),'asignacion_date':([0,138,155,189,192,203,],[16,16,16,16,16,16,]),'term':([0,8,37,51,61,68,72,74,76,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[17,17,17,17,96,17,17,113,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'expresion_entre_paren':([0,8,37,51,61,68,72,74,76,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[18,18,18,18,97,18,18,97,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'imprimir':([0,138,155,189,192,203,],[19,19,19,19,19,19,]),'touppercase':([0,138,155,189,192,203,],[20,20,20,20,20,20,]),'tolowercase':([0,138,155,189,192,203,],[21,21,21,21,21,21,]),'startwith':([0,138,155,189,192,203,],[22,22,22,22,22,22,]),'tostring':([0,138,155,189,192,203,],[23,23,23,23,23,23,]),'pop':([0,138,155,189,192,203,],[24,24,24,24,24,24,]),'push':([0,138,155,189,192,203,],[25,25,25,25,25,25,]),'shift':([0,138,155,189,192,203,],[26,26,26,26,26,26,]),'setdate':([0,138,155,189,192,203,],[27,27,27,27,27,27,]),'getfullyear':([0,138,155,189,192,203,],[28,28,28,28,28,28,]),'factor':([0,8,37,51,61,67,68,72,74,76,82,92,103,104,105,106,107,108,109,110,111,112,138,155,158,159,160,161,162,163,164,165,189,192,193,203,],[31,31,31,31,31,98,31,31,31,31,122,132,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'operador':([14,38,73,100,102,115,139,140,141,142,143,144,145,146,147,148,170,171,172,173,174,175,176,177,],[61,74,61,74,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'condicion':([37,51,68,193,],[69,86,99,197,]),'date_param':([168,],[181,]),'else':([178,205,],[185,206,]),'elseif':([178,],[186,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencias","S'",1,None,None,None),
  ('sentencias -> statement','sentencias',1,'p_sentencias','sintactico.py',7),
  ('sentencias -> if','sentencias',1,'p_sentencias','sintactico.py',8),
  ('sentencias -> for','sentencias',1,'p_sentencias','sintactico.py',9),
  ('sentencias -> while','sentencias',1,'p_sentencias','sintactico.py',10),
  ('statement -> stm','statement',1,'p_statements','sintactico.py',13),
  ('stm -> asignacion','stm',1,'p_stm_asignacion','sintactico.py',16),
  ('stm -> expresion','stm',1,'p_stm_expression','sintactico.py',19),
  ('stm -> metodos','stm',1,'p_stm_metodos','sintactico.py',22),
  ('metodos -> imprimir','metodos',1,'p_metodos','sintactico.py',25),
  ('metodos -> touppercase','metodos',1,'p_metodos','sintactico.py',26),
  ('metodos -> tolowercase','metodos',1,'p_metodos','sintactico.py',27),
  ('metodos -> startwith','metodos',1,'p_metodos','sintactico.py',28),
  ('metodos -> tostring','metodos',1,'p_metodos','sintactico.py',29),
  ('metodos -> pop','metodos',1,'p_metodos','sintactico.py',30),
  ('metodos -> push','metodos',1,'p_metodos','sintactico.py',31),
  ('metodos -> shift','metodos',1,'p_metodos','sintactico.py',32),
  ('metodos -> setdate','metodos',1,'p_metodos','sintactico.py',33),
  ('metodos -> getfullyear','metodos',1,'p_metodos','sintactico.py',34),
  ('imprimir -> PRINT LPAREN factor RPAREN','imprimir',4,'p_imprimir','sintactico.py',37),
  ('touppercase -> ID TOUPPERCASE LPAREN RPAREN','touppercase',4,'p_to_upper_case','sintactico.py',40),
  ('touppercase -> asignacion TOUPPERCASE LPAREN RPAREN','touppercase',4,'p_to_upper_case','sintactico.py',41),
  ('tolowercase -> ID TOLOWERCASE LPAREN RPAREN','tolowercase',4,'p_to_lower_case','sintactico.py',45),
  ('tolowercase -> asignacion TOLOWERCASE LPAREN RPAREN','tolowercase',4,'p_to_lower_case','sintactico.py',46),
  ('startwith -> ID STARTSWITH LPAREN STRING RPAREN','startwith',5,'p_start_with','sintactico.py',49),
  ('startwith -> asignacion STARTSWITH LPAREN RPAREN','startwith',4,'p_start_with','sintactico.py',50),
  ('tostring -> ID TOSTRING LPAREN RPAREN','tostring',4,'p_to_string','sintactico.py',53),
  ('tostring -> asignacion TOSTRING LPAREN RPAREN','tostring',4,'p_to_string','sintactico.py',54),
  ('pop -> ID POP LPAREN RPAREN','pop',4,'p_pop','sintactico.py',57),
  ('pop -> asignacion POP LPAREN RPAREN','pop',4,'p_pop','sintactico.py',58),
  ('push -> ID PUSH LPAREN factor RPAREN','push',5,'p_push','sintactico.py',61),
  ('push -> asignacion PUSH LPAREN factor RPAREN','push',5,'p_push','sintactico.py',62),
  ('shift -> ID SHIFT LPAREN RPAREN','shift',4,'p_shift','sintactico.py',65),
  ('shift -> asignacion SHIFT LPAREN RPAREN','shift',4,'p_shift','sintactico.py',66),
  ('setdate -> ID SETDATE LPAREN NUMBER RPAREN','setdate',5,'p_set_date','sintactico.py',69),
  ('setdate -> asignacion SETDATE LPAREN NUMBER RPAREN','setdate',5,'p_set_date','sintactico.py',70),
  ('getfullyear -> ID GETFULLYEAR LPAREN RPAREN','getfullyear',4,'p_get_full_year','sintactico.py',73),
  ('getfullyear -> asignacion GETFULLYEAR LPAREN RPAREN','getfullyear',4,'p_get_full_year','sintactico.py',74),
  ('while -> WHILE LPAREN condicion RPAREN LBRACE sentencias RBRACE','while',7,'p_while','sintactico.py',77),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE','if',7,'p_if','sintactico.py',80),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE else','if',8,'p_if','sintactico.py',81),
  ('if -> IF LPAREN condicion RPAREN LBRACE sentencias RBRACE elseif','if',8,'p_if','sintactico.py',82),
  ('condicion -> TRUE','condicion',1,'p_condicion','sintactico.py',85),
  ('condicion -> FALSE','condicion',1,'p_condicion','sintactico.py',86),
  ('condicion -> NOT expresion','condicion',2,'p_condicion','sintactico.py',87),
  ('condicion -> expresion EQUALS expresion','condicion',3,'p_condicion','sintactico.py',88),
  ('condicion -> expresion NOTEQUALS expresion','condicion',3,'p_condicion','sintactico.py',89),
  ('condicion -> expresion STRICTEQUALS expresion','condicion',3,'p_condicion','sintactico.py',90),
  ('condicion -> expresion MORETHAN expresion','condicion',3,'p_condicion','sintactico.py',91),
  ('condicion -> expresion LESSTHAN expresion','condicion',3,'p_condicion','sintactico.py',92),
  ('condicion -> expresion MORETHANEQUALS expresion','condicion',3,'p_condicion','sintactico.py',93),
  ('condicion -> expresion LESSTHANEQUALS expresion','condicion',3,'p_condicion','sintactico.py',94),
  ('condicion -> expresion STRICTNOTEQUALS expresion','condicion',3,'p_condicion','sintactico.py',95),
  ('condicion -> expresion OR expresion','condicion',3,'p_condicion','sintactico.py',96),
  ('condicion -> expresion AND expresion','condicion',3,'p_condicion','sintactico.py',97),
  ('condicion -> LPAREN condicion RPAREN EQUALS expresion','condicion',5,'p_condicion','sintactico.py',98),
  ('condicion -> LPAREN condicion RPAREN NOTEQUALS expresion','condicion',5,'p_condicion','sintactico.py',99),
  ('condicion -> LPAREN condicion RPAREN STRICTEQUALS expresion','condicion',5,'p_condicion','sintactico.py',100),
  ('condicion -> LPAREN condicion RPAREN MORETHAN expresion','condicion',5,'p_condicion','sintactico.py',101),
  ('condicion -> LPAREN condicion RPAREN LESSTHAN expresion','condicion',5,'p_condicion','sintactico.py',102),
  ('condicion -> LPAREN condicion RPAREN MORETHANEQUALS expresion','condicion',5,'p_condicion','sintactico.py',103),
  ('condicion -> LPAREN condicion RPAREN LESSTHANEQUALS expresion','condicion',5,'p_condicion','sintactico.py',104),
  ('condicion -> LPAREN condicion RPAREN STRICTNOTEQUALS expresion','condicion',5,'p_condicion','sintactico.py',105),
  ('else -> ELSE LBRACE sentencias RBRACE','else',4,'p_else','sintactico.py',108),
  ('elseif -> ELIF LPAREN condicion RPAREN LBRACE sentencias RBRACE else','elseif',8,'p_else_if','sintactico.py',111),
  ('for -> FOR LPAREN type ID OF ID RPAREN LBRACE sentencias RBRACE','for',10,'p_for','sintactico.py',114),
  ('asignacion -> type ID EQUAL expresion','asignacion',4,'p_asignacion','sintactico.py',117),
  ('asignacion -> asignacion_date','asignacion',1,'p_asignacion','sintactico.py',118),
  ('asignacion_date -> type ID EQUAL NEW DATE LPAREN RPAREN','asignacion_date',7,'p_asignacion_new_date','sintactico.py',121),
  ('asignacion_date -> type ID EQUAL NEW DATE LPAREN date_param RPAREN','asignacion_date',8,'p_asignacion_new_date','sintactico.py',122),
  ('date_param -> STRING','date_param',1,'p_date_param','sintactico.py',125),
  ('date_param -> NUMBER','date_param',1,'p_date_param','sintactico.py',126),
  ('date_param -> NUMBER COMMA NUMBER','date_param',3,'p_date_param','sintactico.py',127),
  ('date_param -> NUMBER COMMA NUMBER COMMA NUMBER','date_param',5,'p_date_param','sintactico.py',128),
  ('type -> VAR','type',1,'p_type','sintactico.py',132),
  ('type -> LET','type',1,'p_type','sintactico.py',133),
  ('expresion -> expresion operador term','expresion',3,'p_expresion_operacion','sintactico.py',136),
  ('expresion -> expresion operador expresion_entre_paren','expresion',3,'p_expresion_operacion','sintactico.py',137),
  ('expresion -> expresion_entre_paren','expresion',1,'p_expresion_operacion','sintactico.py',138),
  ('expresion_entre_paren -> LPAREN expresion operador term RPAREN','expresion_entre_paren',5,'p_expresion_entre_paren','sintactico.py',141),
  ('operador -> MINUS','operador',1,'p_operador','sintactico.py',144),
  ('operador -> PLUS','operador',1,'p_operador','sintactico.py',145),
  ('operador -> DIVIDE','operador',1,'p_operador','sintactico.py',146),
  ('operador -> TIMES','operador',1,'p_operador','sintactico.py',147),
  ('operador -> MOD','operador',1,'p_operador','sintactico.py',148),
  ('expresion -> term','expresion',1,'p_expresion_term','sintactico.py',151),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',154),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',157),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',160),
  ('factor -> STRING','factor',1,'p_factor_str','sintactico.py',163),
  ('factor -> TRUE','factor',1,'p_factor_bool','sintactico.py',166),
  ('factor -> FALSE','factor',1,'p_factor_bool','sintactico.py',167),
]
